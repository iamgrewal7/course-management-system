# Generated by Django 3.0.5 on 2020-04-19 22:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('info', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(default=1)),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('number', models.CharField(max_length=10, null=True, unique=True)),
                ('credit', models.PositiveIntegerField(default=3)),
                ('pre_req', models.ManyToManyField(blank=True, related_name='_course_pre_req_+', to='account.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Forum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='TeachingTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_id', models.IntegerField(null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('zipcode', models.CharField(max_length=50)),
                ('age', models.PositiveIntegerField(default=0)),
                ('gender', models.CharField(max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='FacultyMember',
            fields=[
                ('userdetail_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='account.UserDetail')),
                ('title', models.CharField(max_length=10, null=True)),
                ('office_address', models.CharField(max_length=50)),
                ('auth_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.Department')),
            ],
            bases=('account.userdetail',),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('userdetail_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='account.UserDetail')),
                ('student_id', models.CharField(max_length=10, unique=True)),
                ('is_ta', models.BooleanField(default=False)),
                ('auth_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('major', models.ManyToManyField(blank=True, to='account.Department')),
            ],
            bases=('account.userdetail',),
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(default=1)),
                ('limit', models.IntegerField(default=50)),
                ('drop_deadline', models.DateTimeField(null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=100)),
                ('auth_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('comment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.Post')),
                ('forum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.Forum')),
            ],
        ),
        migrations.CreateModel(
            name='Offering',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('announcement', models.ManyToManyField(blank=True, to='account.Announcement')),
                ('assignment', models.ManyToManyField(blank=True, to='account.Assignment')),
                ('section', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='account.Section')),
                ('teaching_team', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.TeachingTeam')),
            ],
        ),
        migrations.AddField(
            model_name='forum',
            name='offering',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.Offering'),
        ),
        migrations.AddField(
            model_name='teachingteam',
            name='instructor',
            field=models.ManyToManyField(blank=True, to='account.FacultyMember'),
        ),
        migrations.AddField(
            model_name='teachingteam',
            name='ta',
            field=models.ManyToManyField(blank=True, to='account.Student'),
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.FloatField(default=0)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.Assignment')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.Student')),
            ],
        ),
        migrations.CreateModel(
            name='Enrollments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offering', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='account.Offering')),
                ('students', models.ManyToManyField(blank=True, to='account.Student')),
            ],
        ),
    ]
